import os
import telebot
import instaloader
from flask import Flask, request
from telebot import types
import threading
import time

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")  # –Ω–∞–ø—Ä–∏–º–µ—Ä: -1001234567890
MODERATOR_ID = int(os.getenv("MODERATOR_ID"))
INSTAGRAM_USER = os.getenv("INSTAGRAM_USER")
APP_URL = os.getenv("APP_URL")

bot = telebot.TeleBot(BOT_TOKEN)
server = Flask(__name__)
L = instaloader.Instaloader()

last_post = None  # —Å—é–¥–∞ –±—É–¥–µ–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤
def check_instagram():
    global last_post
    while True:
        try:
            profile = instaloader.Profile.from_username(L.context, INSTAGRAM_USER)
            posts = profile.get_posts()
            latest_post = next(posts)

            if last_post != latest_post.mediaid:
                last_post = latest_post.mediaid

                caption = latest_post.caption if latest_post.caption else "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"

                markup = types.InlineKeyboardMarkup()
                markup.add(
                    types.InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve|{latest_post.shortcode}"),
                    types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="reject")
                )

                # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –ø—Ä–µ–≤—å—é + –ø–æ–¥–ø–∏—Å—å
                if latest_post.is_video:
                    bot.send_message(MODERATOR_ID, f"–ù–æ–≤—ã–π –ø–æ—Å—Ç (–≤–∏–¥–µ–æ):\n\n{caption}\n\nhttps://instagram.com/p/{latest_post.shortcode}/",
                                     reply_markup=markup)
                else:
                    # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
                    image_url = latest_post.url
                    bot.send_photo(MODERATOR_ID, image_url, caption=f"–ù–æ–≤—ã–π –ø–æ—Å—Ç:\n\n{caption}", reply_markup=markup)

        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Å—Ç–æ–≤:", e)

        time.sleep(60)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data.startswith("approve"):
        _, shortcode = call.data.split("|", 1)
        try:
            post = instaloader.Post.from_shortcode(L.context, shortcode)
            caption = post.caption if post.caption else "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"

            if post.is_video:
                bot.send_message(CHANNEL_ID, f"üì¢ –ù–æ–≤—ã–π –ø–æ—Å—Ç (–≤–∏–¥–µ–æ)\n\n{caption}\n\nhttps://instagram.com/p/{shortcode}/")
            else:
                bot.send_photo(CHANNEL_ID, post.url, caption=f"üì¢ –ù–æ–≤—ã–π –ø–æ—Å—Ç!\n\n{caption}")

            bot.answer_callback_query(call.id, "‚úÖ –ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª")
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞:", e)
            bot.answer_callback_query(call.id, "‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
    elif call.data == "reject":
        bot.answer_callback_query(call.id, "‚ùå –ü–æ—Å—Ç –æ—Ç–∫–ª–æ–Ω—ë–Ω")


# Flask webhook
@server.route(f"/{BOT_TOKEN}", methods=["POST"])
def webhook():
    json_str = request.get_data().decode("UTF-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "ok", 200


@server.route("/", methods=["GET"])
def index():
    bot.remove_webhook()
    bot.set_webhook(url=f"{APP_URL}/{BOT_TOKEN}")
    return "Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!", 200


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É Instagram –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=check_instagram, daemon=True).start()
    server.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
