import os
import telebot
from telebot import types
import instaloader
from flask import Flask, request

# -----------------------------
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# -----------------------------
TOKEN = os.getenv("BOT_TOKEN")  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
CHANNEL_ID = int(os.getenv("CHANNEL_ID"))  # id –∫–∞–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, -1001234567890)
MODERATOR_ID = int(os.getenv("MODERATOR_ID"))  # id –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞

INSTAGRAM_USER = os.getenv("INSTAGRAM_USER")  # –Ω–∏–∫ –∞–∫–∫–∞—É–Ω—Ç–∞

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# -----------------------------
# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Instagram
# -----------------------------
L = instaloader.Instaloader()
try:
    # –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
    # L.login(os.getenv("INSTAGRAM_LOGIN"), os.getenv("INSTAGRAM_PASSWORD"))
    profile = instaloader.Profile.from_username(L.context, INSTAGRAM_USER)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ—Ñ–∏–ª—é {INSTAGRAM_USER}")
except Exception as e:
    print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ Instagram:", e)

# -----------------------------
# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤
# -----------------------------
def get_latest_post():
    profile = instaloader.Profile.from_username(L.context, INSTAGRAM_USER)
    post = next(profile.get_posts())  # —Å–∞–º—ã–π –Ω–æ–≤—ã–π –ø–æ—Å—Ç
    return post

# -----------------------------
# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –ø–æ—Å—Ç
# -----------------------------
def send_post_for_moderation():
    post = get_latest_post()
    caption = post.caption if post.caption else "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"
    shortcode = post.shortcode

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve|{shortcode}|{caption}"),
        types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="reject")
    )

    bot.send_message(
        MODERATOR_ID,
        f"üì¢ –ù–æ–≤—ã–π –ø–æ—Å—Ç –∏–∑ Instagram:\n\n{caption}\n\nhttps://instagram.com/p/{shortcode}/",
        reply_markup=markup
    )

# -----------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
# -----------------------------
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data.startswith("approve"):
        try:
            _, shortcode, caption = call.data.split("|", 2)
            post = instaloader.Post.from_shortcode(L.context, shortcode)
            media_url = post.url  # —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ

            bot.send_photo(CHANNEL_ID, media_url, caption=f"üì¢ –ù–æ–≤—ã–π –ø–æ—Å—Ç!\n\n{caption}")
            bot.answer_callback_query(call.id, "‚úÖ –ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª")
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞:", e)
            bot.answer_callback_query(call.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å—Ç–∞")
    elif call.data == "reject":
        bot.answer_callback_query(call.id, "‚ùå –ü–æ—Å—Ç –æ—Ç–∫–ª–æ–Ω—ë–Ω")

# -----------------------------
# Flask Webhook –¥–ª—è Railway
# -----------------------------
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    json_str = request.get_data().decode("UTF-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

@app.route("/", methods=["GET"])
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!", 200

# -----------------------------
# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ (–æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ)
# -----------------------------
with app.app_context():
    send_post_for_moderation()

# -----------------------------
# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
# -----------------------------
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)
