import os
import time
import requests
import telebot

# --- –ö–æ–Ω—Ñ–∏–≥ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")  # —Ç–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ Telegram-–±–æ—Ç–∞
RAPIDAPI_KEY = os.getenv("RAPIDAPI_KEY")      # –∫–ª—é—á RapidAPI
INSTAGRAM_USERNAME = os.getenv("INSTAGRAM_USERNAME")  # –∏–º—è Instagram-–∞–∫–∫–∞—É–Ω—Ç–∞
MODERATOR_CHAT_ID = int(os.getenv("MODERATOR_CHAT_ID"))  # chat_id –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
CHECK_INTERVAL = int(os.getenv("CHECK_INTERVAL", 60))    # –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
posted_ids = set()

def get_latest_post():
    """–ó–∞–ø—Ä–æ—Å –∫ RapidAPI –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞"""
    url = "https://instagram-scraper-stable-api.p.rapidapi.com/ig_get_fb_profile_hover.php"
    querystring = {"username_or_url": INSTAGRAM_USERNAME}
    headers = {
        "x-rapidapi-host": "instagram-scraper-stable-api.p.rapidapi.com",
        "x-rapidapi-key": RAPIDAPI_KEY
    }

    response = requests.get(url, headers=headers, params=querystring)
    if response.status_code != 200:
        print(f"–û—à–∏–±–∫–∞ API: {response.status_code} {response.text}")
        return None

    data = response.json()
    try:
        # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
        post = data["posts"][0]
        return {
            "id": post["id"],
            "caption": post.get("caption", ""),
            "image_url": post["image_url"]
        }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
    if call.data.startswith("approve_"):
        post_id = call.data.split("_", 1)[1]
        bot.send_message(call.message.chat.id, f"‚úÖ –ü–æ—Å—Ç {post_id} –æ–¥–æ–±—Ä–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª –∏–ª–∏ —á–∞—Ç
    elif call.data.startswith("reject_"):
        post_id = call.data.split("_", 1)[1]
        bot.send_message(call.message.chat.id, f"‚ùå –ü–æ—Å—Ç {post_id} –æ—Ç–∫–ª–æ–Ω—ë–Ω.")

def send_for_moderation(post):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ"""
    keyboard = telebot.types.InlineKeyboardMarkup()
    approve_btn = telebot.types.InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_{post['id']}")
    reject_btn = telebot.types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{post['id']}")
    keyboard.add(approve_btn, reject_btn)

    bot.send_photo(
        MODERATOR_CHAT_ID,
        post["image_url"],
        caption=f"–ù–æ–≤—ã–π –ø–æ—Å—Ç:\n{post['caption']}",
        reply_markup=keyboard
    )

def check_new_posts():
    """–¶–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ Instagram –Ω–∞ –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã"""
    while True:
        post = get_latest_post()
        if post and post["id"] not in posted_ids:
            posted_ids.add(post["id"])
            send_for_moderation(post)
        time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    import threading
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Å—Ç–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=check_new_posts, daemon=True).start()
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã...")
    bot.infinity_polling()
